树的概念：
1.每棵树都有一个root结点
2.其余结点可分为m个不相交的有限集T1,T2,T3...Tm,称为子树。

注意：1.子树永不相交。
          2.除了根结点之外，每个结点都只有一个父结点。
          3.一棵树有n个结点，那么有n-1条边。（每个结点都有一条边(n），除了根节点之外故-1）
问题：m棵树，有k条边，问有多少个结点。

树的基本术语：
1.结点的度：该结点所连子树的个数。
2.树的度：树的结点中，结点的度的最大值。
3.叶结点（没有子结点的结点），父结点，子结点，兄弟结点。
4.路径和路径长度。
5.祖先结点和子孙结点。
6.结点的层次。
7.树的高度：结点的最大层次。

二叉树：度为2的树。主要区别在于二叉树的子树有左右之分。
二叉树有五种形态。
特殊二叉树：斜二叉树，完美二叉树（满二叉树），完全二叉树。
二叉树的重要性质：
1.第i层的结点数最大为2的i-1次方。
2.深度为k的二叉树 最大结点数之和为2的k次方-1；等比数列求和（满二叉树）完全二叉树。
3.若以n0表示叶结点的个数，n1表示度数为1的非叶结点的个数，n2表示度数为2的非叶结点的个数，总结点数为n0+n1+n2,那么n0=n2+1;
列关于边的方程可以得到这个结论。

二叉树的存储：
	顺序存储：
	对于完全二叉树，可以拿数组来存储，其中序号为i的 非根结点 的 父结点的序号为[i/2]；
	结点序号为i的左孩子结点的序号为2i;右孩子结点的序号为2i+1；如果超出数组范围则不存在这个结点。



先序遍历：
1.访问根节点。
2.先序遍历左子树。
3.先序遍历右子树。

中序遍历：
1.中序遍历左子树。
2.访问根节点。
3.中序遍历右子树。

后序遍历：左右根
1.后序遍历左子树。
2.后序遍历右子树。
3.访问根节点








二叉搜索树：左子树比根节点小，右子树比根节点大
平衡二叉树：平衡因子：左子树的高度-右子树的高度